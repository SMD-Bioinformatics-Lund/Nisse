singularity {
    enabled = true
    autoMounts = true
    cacheDir = "/fs1/jakob/containers"
    runOptions = "--bind /fs1/ --bind /local/ --bind /mnt/beegfs/ --bind /fs2/"
}

// FIXME: Move reference files to ref folder before final run

params {
    publish_mode = 'copy'
    qc_only = false
    run_tomte = true

    phenotype = "affected"
    tissue = "blood"

    stat_col = "pValue"
    stat_cutoff = 1
    score_threshold = 17

    refpath          = "/fs1/resources/ref/hg38/"
    hgnc_map         = "/fs1/jakob/proj/240613_run_tomte/load_cases/2_drop/hgnc_symbol_to_id_240927.tsv"
    cadd             = "${refpath}/annotation_dbs/CADD_v1.7/whole_genome_SNVs.tsv.gz"
    cadd_tbi         = "${refpath}/annotation_dbs/CADD_v1.7/whole_genome_SNVs.tsv.gz.tbi"
    score_config     = "/fs1/resources/scout/rank_models_38/rank_model_v5.2.1_single__VEP111.ini"
    hb_genes         = "/fs1/jakob/src/nisse/ref/hb_genes.tsv"
    genome_fasta     =  "/fs1/jakob/data/hg38/chr_masked_acgtn.fna"
    genome_fasta_fai =  "/fs1/jakob/data/hg38/chr_masked_acgtn.fna.fai"

// We use the chr-one here I guess
// /fs1/resources/ref/hg38/fasta/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna

    tomte_results_paths = [
        variant_calls: "%s/call_variants/%s_split_rmdup_info.vcf.gz",
        junction_bed: "%s/junction/%s_junction.bed",
        multiqc_summary: "%s/multiqc/multiqc_data/multiqc_general_stats.txt",
        picard_coverage: "%s/multiqc/multiqc_data/picard_rna_coverage.txt",
        fraser_tsv: "%s/analyse_transcripts/drop/%s_fraser_top_hits_research.tsv",
        outrider_tsv: "%s/analyse_transcripts/drop/%s_outrider_top_hits_research.tsv",
        cram: "%s/alignment/%s.cram",
        cram_crai: "%s/alignment/%s.cram.crai",
        bigwig: "%s/ucsc/%s.bw",
        peddy_ped: "%s/qc/peddy/%s.peddy.ped",
        peddy_check: "%s/qc/peddy/%s.ped_check.csv",
        peddy_sex: "%s/qc/peddy/%s.sex_check.csv",
        hb_estimate: "%s/qc/estimate_hb_perc/%s_perc_mapping.json"
    ]

    tomte = [
        version: true,
        validate_params: true,
        monochrome_logs: true,
    ]

    containers = [
        base: "/fs1/resources/containers/wgs_2021-03-16.sif",
        bcftools: "/fs1/resources/containers/bcftools_1.20.sif",
        genmod: "/fs1/resources/containers/genmod_v3.9.sif",
        vep: "/fs1/resources/containers/ensembl-vep_release_111.0.sif",
        cadd: "/fs1/resources/containers/cadd_v1.6.sif"
    ]

    idsnps = [
        idsnp_bed: "/fs2/jakob/references/idSnp/44_rsids_100nt_flanks.bed",
        idSnp_bed_gz: "/fs2/jakob/references/idSnp/44_rsids.vs.dbsnp_146.hg38.tsv.gz",
        idSnp_std_bed_gz: "/fs2/jakob/references/idSnp/44_sorted_rsids_standard.bed.gz",
        header: "/fs2/jakob/references/idSnp/header"
    ]

    het_calls = [
        target_bed: "/fs2/jakob/references/genotyping-213-snp_feb2018_50nt-flanks.bed",
        targets_file_tsv_gz: "/fs2/jakob/references/genotyping-213-snp_feb2018.chr.tsv.gz"
    ]

    VEP_DIR = "${refpath}/vep/vep111.0"
    vep = [
        VEP_SYNONYMS: "${VEP_DIR}/synonyms",
        VEP_FASTA: "${VEP_DIR}/homo_sapiens_merged/111_GRCh38/Homo_sapiens.GRCh38.dna.toplevel.fa.gz",
        VEP_CACHE: "${VEP_DIR}",
        VEP_PLUGINS: "${VEP_DIR}/Plugins",
        VEP_TRANSCRIPT_DISTANCE: "200",
        CADD: "${refpath}/annotation_dbs/CADD_v1.7/whole_genome_SNVs.tsv.gz",
        DBNSFP: "${refpath}/annotation_dbs/dbnsfp/dbNSFP4.3a_grch38.gz",
        GNOMAD_EXOMES: "${refpath}/annotation_dbs/gnomad_2.1/gnomad.exomes.r2.1.sites.grch38.ALLchr.minified.sort.vcf.gz",
        GNOMAD_GENOMES: "${refpath}/annotation_dbs/gnomad_2.1_genomes/gnomad_genomes_2.1_hg38_minified.miniheader.vcf.gz",
        GNOMAD_MT: "${refpath}/annotation_dbs/gnomad_3.1/gnomad.genomes.v3.1.sites.MT.vcf.bgz",
        MAXENTSCAN: "${VEP_DIR}/Plugins/MaxEntScan_scripts",
        PHYLOP: "${refpath}/annotation_dbs/hg38.phyloP100way.bw",
        PHASTCONS: "${refpath}/annotation_dbs/hg38.phastCons100way.bw",
        VCFANNO_LUA: "/fs1/resources/ref/hg19/bed/scout/sv_tracks/silly.lua",
        VCFANNO: "${params.refpath}/annotation_dbs/wgs/vcfanno/vcf_anno"
    ]
}

process {
    executor = 'slurm'
    queue = 'grace-low'

    withLabel: process_low {
        cpus = 4
        memory = 4.GB
        time = 1.h
    }
    withLabel: process_medium {
        cpus = 12
        memory = 20.GB
        time = 4.h
    }
    withLabel: process_high {
        cpus = 40
        memory = 40.GB
        time = 24.h
    }

    withName: PREPARE_DROP_FRASER {
        publishDir = [
            path: { "${params.outdir}/drop" },
            mode: params.publish_mode,
            pattern: "*.tsv"
        ]
    }
    withName: PREPARE_DROP_OUTRIDER {
        publishDir = [
            path: { "${params.outdir}/drop" },
            mode: params.publish_mode,
            pattern: "*.tsv"
        ]
    }
    withName: CREATE_PED {
        publishDir = [
            path: { "${params.outdir}/ped" },
            mode: params.publish_mode,
            pattern: "*.ped"
        ]
    }
    withName: PARSE_TOMTE_QC {
        publishDir = [
            path: { "${params.outdir}/qc" },
            mode: params.publish_mode,
            pattern: "*.json"
        ]
    }
    withName: MAKE_SCOUT_YAML {
        publishDir = [
            path: { "${params.outdir}/yaml" },
            mode: params.publish_mode,
            pattern: "*.yaml"
        ]
    }
    withName: BGZIP_TABIX_BED {
        publishDir = [
            path: { "${params.outdir}/junction" },
            mode: params.publish_mode,
            pattern: "*.{bed.gz,.bed.gz.tbi}"
        ]
    }
    withName: BGZIP_TABIX_VCF {
        publishDir = [
            path: { "${params.outdir}/vcf" },
            mode: params.publish_mode,
            pattern: "*.{vcf.gz,.vcf.gz.tbi}"
        ]
    }
    withName: OUTPUT_VERSIONS {
        publishDir = [
            path: { "${params.outdir}/versions" },
            mode: params.publish_mode,
            pattern: "*.yaml"
        ]
    }
}
